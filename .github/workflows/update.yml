#
# GitHub Actions Workflow: Fully Automated Chrome Flatpak CI/CD
#
# Author: Senior Flatpak Packager & Security Analyst
#
# Description:
# This workflow automates the entire packaging lifecycle based on Git tags.
# 1. Checks for a new Chrome version that is not already tagged in the repo.
# 2. Updates all manifest dependencies.
# 3. Builds the Flatpak package.
# 4. If, and only if, the build is successful, it commits the updated manifest
#    to the 'main' branch and tags that commit with the Chrome version.
# 5. It then deploys the repository to the 'gh-pages' branch and creates a
#    separate 'deploy-<version>' tag pointing to the deployment commit.
#
name: 'Automated Chrome Flatpak CI/CD'

on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    - cron: '0 5 * * *' # Runs daily at 5 AM UTC

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.repo.outputs.version }}
      update: ${{ steps.check.outputs.update }}
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Fetch Chrome Debian Repository"
        id: repo
        run: |
          PACKAGE_INFO=$(curl -sL https://dl.google.com/linux/chrome/deb/dists/stable/main/binary-amd64/Packages | awk 'BEGIN{RS=""} /Package: google-chrome-stable/{print}')
          VERSION=$(echo "$PACKAGE_INFO" | grep '^Version:' | awk '{print $2}')
          CHECKSUM=$(echo "$PACKAGE_INFO" | grep '^SHA256:' | awk '{print $2}')
          echo "Latest Chrome Version Found: $VERSION"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: "Check For Version Tag"
        id: check
        run: |
          VERSION=${{ steps.repo.outputs.version }}
          if git ls-remote --exit-code --tags origin ${VERSION}; then
            echo "Tag for version ${VERSION} already exists. No update needed."
            echo "update=false" >> $GITHUB_OUTPUT
          else
            echo "New version ${VERSION} detected. Proceeding with build."
            echo "update=true" >> $GITHUB_OUTPUT
          fi

  update:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:freedesktop-25.08
      options: --privileged
    needs: check
    if: needs.check.outputs.update == 'true'
    permissions:
      contents: write
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
        with:
          ref: main

      - name: "Update Manifest"
        uses: docker://ghcr.io/flathub/flatpak-external-data-checker:latest
        with:
          args: /github/workspace/com.google.Chrome.yaml

      - name: 'Import GPG Key'
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import

      - name: "Build Flatpak"
        run: |
          VERSION=${{ needs.check.outputs.version }}
          flatpak-builder --repo=repo --force-clean --disable-rofiles-fuse \
            --subject="Update Chrome to ${VERSION}" build-dir com.google.Chrome.yaml

      - name: "Check GitHub Pages Branch"
        id: pages
        run: |
          if git ls-remote --exit-code --branches origin gh-page; then
            echo "GitHub Pages branch already exists."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "GitHub Pages branch doesn't exist."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: "Create GitHub Pages Repository"
        if: steps.pages.output.exists == 'false'
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        run: |
          git clone . gh-pages
          git switch --orphan gh-pages
          cp -a repo/. gh-pages
          flatpak build-sign --gpg-sign="$GPG_KEY_ID" gh-pages

      - name: "Checkout GitHub Pages Repository"
        if: steps.pages.output.exists == 'true'
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: "Update GitHub Pages Repository"
        if: steps.pages.output.exists == 'true'
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        run: flatpak build-update-repo --gpg-sign="$GPG_KEY_ID" --prune gh-pages repo

      - name: "Sign GitHub Pages Repository Summary"
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        run: ostree summary -u --gpg-sign="$GPG_KEY_ID" gh-pages

      - name: "Publish GitHub Pages Repositry"
        run: |
          cd gh-pages
          git add .
          git commit -m "Deploy Chrome version ${VERSION}"
          git tag "deploy-${VERSION}"
          git push origin gh-pages
          git push origin "deploy-${VERSION}"

      - name: "Commit Manifest And Tag Main Branch"
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          VERSION=${{ steps.repo.outputs.version }}
          git add com.google.Chrome.yaml
          git commit -m "Update Chrome to version ${VERSION}"
          git tag "${VERSION}"
          git push main
          git push origin "${VERSION}"
